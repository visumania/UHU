package libClasses;

import libClasses.Date;

public class Client implements Cloneable, Process
{
	private final String nif; //id of the client (letter included) (can't change)
	private final int codClient; //unique code (and constant) generated by the application
	private String name; //Full name of the client (can be change)
	private final  Date dateBirth; // date of birth of the client (can't change)
	private Date dischargeDate; //discharge date of the client (can be modified)
	static private int counter = 1;
	static private Date defaultDate = new Date (1,1,2018);
	
	//Constructors of client class
	public Client(String pNif, String pName, Date pDateBirth, Date pDischargeDate)
	{
		this.codClient = counter++;
		this.nif = pNif;
		this.setName(pName);
		this.dateBirth = pDateBirth;
		this.dischargeDate = pDischargeDate;
	}
	
	public Client(String pNif, String pName, Date pDateBirth)
	{
		this.codClient = counter++;
		this.nif = pNif;
		this.name = pName; 
		this.dateBirth = pDateBirth;
		this.dischargeDate = defaultDate;
	}
	
	public Client(Client pClient)
	{
		this.codClient = counter++;
		this.nif = pClient.getNif();
		this.name = pClient.getName();
		this.dateBirth = pClient.getDateBirth();
		this.dischargeDate = pClient.getDischargeDate();
	}
	
	@Override
	public String toString() //return a chain within the info of the client (this is like overload ostream<< in c++)
	{
		String screen = this.nif + " " + this.dateBirth.toString() + ": " + this.name + "(" + this.codClient + " - " + this.dischargeDate.toString() + ")";
		
		return screen;
	}
	
	public String getName()
	{
		return this.name;
	}
	
	public void setName(String pName)
	{
		this.name = pName;
	}
	
	public static Date getDefaultDate()
	{
		Date aux = new Date(Client.defaultDate);
		
		return aux;
	}
	
	static public void setDefaultDate(Date pDischargeDate)
	{
		defaultDate = new Date(pDischargeDate);
	}
	
	public String getNif()
	{
		return this.nif;
	}

	@Override
	public void see() 
	{
		System.out.println(this.toString());
	}
	
	public void setDischargeDate(Date pDischargeDate)
	{
		this.dischargeDate = new Date(pDischargeDate);
	}
	
	public Date getDischargeDate()
	{
		Date aux = new Date(this.dischargeDate);
		
		return aux;
	}
	
	public Date getDateBirth()
	{
		Date aux = new Date(this.dateBirth);
		
		return aux;
	}
	
	public int getCodClient()
	{
		return this.codClient;
	}
	
	@Override
	public Object clone()
	{
		return new Client(this);
	}
	
	@Override
	public boolean equals(Object obj)
	{
		if(this == obj) return true;
		if(obj == null) return false;
		
		if(getClass() != obj.getClass())
			return false;
		
		Client c = (Client)obj;
		
		return(nif.equals(c.nif));
	}
}